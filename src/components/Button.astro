---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";
const buttonVariants = cva(
  "relative shrink-0 inline-flex items-center group transition",
  {
    variants: {
      variant: {
        nav: "uppercase font-light text-foreground overflow-clip",
        primary:
          "bg-bbrand-500 hover:bg-bbrand-400 text-background rounded-2xl",
        outline:
          "text-bbrand-500 border hover:bg-bbrand-100/30 border-bbrand-500 rounded-2xl",
      },
      size: {
        default: "px-4 py-3  text-base ",
      },
    },
    defaultVariants: {
      variant: "nav",
      size: "default",
    },
  },
);

interface Props
  extends VariantProps<typeof buttonVariants>,
    HTMLAttributes<"button"> {
  scHref?: string;
}

const {
  scHref,
  variant = "nav",
  class: className,
  size,
  ...rest
} = Astro.props;
---

<button
  class={buttonVariants({ variant, size, className })}
  {...scHref && { "data-nav-button": scHref }}
  {...rest}
>
  <slot />
  {
    variant === "nav" && (
      <span
        aria-hidden="true"
        class="absolute bottom-0 -left-full group-hover:left-0 w-full bg-foreground h-px transition-[left] inline-flex"
      />
    )
  }
</button>

<script>
  import { qsAll } from "@/lib/utils";

  function main() {
    const navBtns = qsAll("button[data-nav-button]");

    for (const navBtn of navBtns) {
      navBtn.addEventListener("click", (e) => {
        if (!(e.target instanceof HTMLButtonElement)) return;
        const target = e.target.dataset.navButton;
        target && window.lenis.scrollTo(target);
      });
    }
  }
  main();
</script>
